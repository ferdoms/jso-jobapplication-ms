package com.jobseekerorganizer.jobapplicationms.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerateStrategy;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedTimestamp;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@DynamoDBTable(tableName = "JobApplication")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class JobApplication {

	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	private String id;

	@DynamoDBAttribute
	private String userId;

	@DynamoDBAttribute
	private String companyName;

	@DynamoDBAttribute
	private String jobTitle;

	@DynamoDBAttribute
	private String jobDescription;

	@DynamoDBAttribute
	private String status;

	@DynamoDBAttribute
	private Date statusDate;

	@DynamoDBAttribute
	private String jobUrl;

	@DynamoDBAttribute
	private List<DocumentData> documentList;

	@DynamoDBAttribute
	private List<JobApplicationSnapshot> jobApplicationLog;

	@DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.CREATE)
	private Date createdAt;

	@DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.ALWAYS)
	private Date lastModifiedDate;

	public void setStatus(String status) {
		if (this.status != null && !this.status.equalsIgnoreCase(status)) {
			JobApplicationSnapshot snapshot = JobApplicationSnapshot.builder().previousStatus(this.status)
					.actualStatus(status).logDate(new Date()).build();

			List<JobApplicationSnapshot> logList = new ArrayList<JobApplicationSnapshot>();
			if (this.jobApplicationLog != null) {
				logList = getJobApplicationLog();
			}

			logList.add(snapshot);
			setJobApplicationLog(logList);
		}

		this.status = status;
	}

}
